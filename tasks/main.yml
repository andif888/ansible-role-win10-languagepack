---
# tasks file for ansible-role-win10-languagepack
- name: Lookup current languages
  ansible.windows.win_reg_stat:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\MUI\UILanguages\
  register: current_languages

- name: Languages currently installed on system
  debug:
      var: current_languages.sub_keys

- name: Create list of languages needed be to install
  set_fact:
    to_install_languages: "{{ language_experience_packs | difference(current_languages.sub_keys) }}"

- name: Missing languages going to be installed
  debug:
      var: to_install_languages

- name: disable antimalware realtime shit
  win_shell: |
    Set-MpPreference -DisableRealtimeMonitoring $true
  ignore_errors: yes
  when: to_install_languages | length > 0

- name: make sure dir exist
  win_file:
    path: '{{ language_experience_pack_download_dir }}'
    state: directory
  when: to_install_languages | length > 0

- name: Download Language ISOs
  win_get_url:
    url: '{{ item.url }}'
    dest: '{{ item.dest }}'
    force: no
  loop: '{{ language_experience_pack_isos }}'
  when:
    - to_install_languages | length > 0 
    - language_experience_pack_isos | length > 0

- name: Sleep for 10 seconds and continue with play
  pause:
    seconds: 10
  when: to_install_languages | length > 0

- name: Mount ISOs
  win_disk_image:
    image_path: '{{ item.dest }}'
    state: present
  loop: '{{ language_experience_pack_isos }}'
  register: disk_image_out
  when: 
    - to_install_languages | length > 0
    - language_experience_pack_isos | length > 0

- debug:
    var: disk_image_out
  when:
    - to_install_languages | length > 0 
    - language_experience_pack_isos | length > 0

- name: Disable-ScheduledTask Pre-staged app cleanup
  community.windows.win_scheduled_task:
    name: 'Pre-staged app cleanup'
    path: \Microsoft\Windows\AppxDeploymentClient
    enabled: no
  when: to_install_languages | length > 0

- name: Get wuauserv start_mode
  ansible.windows.win_service:
    name: wuauserv
  register: wuauserv_state
  when: to_install_languages | length > 0

- debug:
    var: wuauserv_state.start_mode
  when: to_install_languages | length > 0

- name: Set wuauserv start_mode=manual
  ansible.windows.win_service:
    name: wuauserv
    start_mode: manual
  register: wuauserv_state_modified
  when:
    - to_install_languages | length > 0 
    - wuauserv_state.start_mode == 'disabled'

- name: Add-AppProvisionedPackage
  win_shell: |
    Add-AppProvisionedPackage -Online -PackagePath {{ disk_image_out.results[0].mount_paths[0] }}LocalExperiencePack\{{ item }}\LanguageExperiencePack.{{ item }}.Neutral.appx -LicensePath {{ disk_image_out.results[0].mount_paths[0] }}LocalExperiencePack\{{ item }}\License.xml
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[0].mount_paths[0] }}x64\langpacks\Microsoft-Windows-Client-Language-Pack_x64_{{ item }}.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-EMS-SAC-Desktop-Tools-FoD-Package~31bf3856ad364e35~amd64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-LanguageFeatures-Basic-{{ item }}-Package~31bf3856ad364e35~amd64~~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-LanguageFeatures-Handwriting-{{ item }}-Package~31bf3856ad364e35~amd64~~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-LanguageFeatures-OCR-{{ item }}-Package~31bf3856ad364e35~amd64~~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-LanguageFeatures-Speech-{{ item }}-Package~31bf3856ad364e35~amd64~~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-LanguageFeatures-TextToSpeech-{{ item }}-Package~31bf3856ad364e35~amd64~~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-NetFx3-OnDemand-Package~31bf3856ad364e35~amd64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-InternetExplorer-Optional-Package~31bf3856ad364e35~amd64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-MSPaint-FoD-Package~31bf3856ad364e35~amd64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-MSPaint-FoD-Package~31bf3856ad364e35~wow64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-Notepad-FoD-Package~31bf3856ad364e35~amd64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-Notepad-FoD-Package~31bf3856ad364e35~wow64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-PowerShell-ISE-FOD-Package~31bf3856ad364e35~amd64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-PowerShell-ISE-FOD-Package~31bf3856ad364e35~wow64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-Printing-PMCPPC-FoD-Package~31bf3856ad364e35~amd64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-Printing-WFS-FoD-Package~31bf3856ad364e35~amd64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-StepsRecorder-Package~31bf3856ad364e35~amd64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-StepsRecorder-Package~31bf3856ad364e35~wow64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-WordPad-FoD-Package~31bf3856ad364e35~amd64~{{ item }}~.cab
    Add-WindowsPackage -Online -PackagePath {{ disk_image_out.results[1].mount_paths[0] }}Microsoft-Windows-WordPad-FoD-Package~31bf3856ad364e35~wow64~{{ item }}~.cab

    $LanguageList = Get-WinUserLanguageList
    $LanguageList.Add("{{ item }}")
    Set-WinUserLanguageList $LanguageList -force
  loop: '{{ to_install_languages }}'
  register: windows_language_pack_install
  when:
    - to_install_languages | length > 0 
    - language_experience_packs | length > 0

- debug:
    var: windows_language_pack_install
  when:
    - to_install_languages | length > 0 
    - language_experience_packs | length > 0

- name: Set InboxApps Content Stores
  win_shell: |
    [string] $AppsContent = "{{ disk_image_out.results[2].mount_paths[0] }}amd64fre{{ language_experience_win_path_seperator }}"
    ## Update installed Inbox Store Apps ##
    foreach ($App in (Get-AppxProvisionedPackage -Online)) {
      $AppPath = $AppsContent + $App.DisplayName + '_' + $App.PublisherId
      Write-Host "Handling $AppPath"
      $licFile = Get-Item $AppPath*.xml
      if ($licFile.Count) {
        $lic = $true
        $licFilePath = $licFile.FullName
      } else {
        $lic = $false
      }
      $appxFile = Get-Item $AppPath*.appx*
      if ($appxFile.Count) {
        $appxFilePath = $appxFile.FullName
        if ($lic) {
          Add-AppxProvisionedPackage -Online -PackagePath $appxFilePath -LicensePath $licFilePath
        } else {
          Add-AppxProvisionedPackage -Online -PackagePath $appxFilePath -skiplicense
        }
      }
    }
  register: windows_language_pack_inboxapps
  when:
    - to_install_languages | length > 0 
    - language_experience_pack_isos | length > 2

- debug:
    var: windows_language_pack_inboxapps
  when:
    - to_install_languages | length > 0 
    - language_experience_pack_isos | length > 2

- name: Restore wuauserv start_mode={{ wuauserv_state.start_mode }}
  ansible.windows.win_service:
    name: wuauserv
    start_mode: '{{ wuauserv_state.start_mode }}'
  when:
    - to_install_languages | length > 0 
    - wuauserv_state_modified.changed

- name: Umount ISOs
  win_disk_image:
    image_path: '{{ item.dest }}'
    state: absent
  loop: '{{ language_experience_pack_isos }}'
  when:
    - to_install_languages | length > 0 
    - language_experience_pack_isos | length > 0

- name: Remove downloaded ISOs
  win_file:
    path: '{{ item.dest }}'
    state: absent
  loop: '{{ language_experience_pack_isos }}'
  when:
    - to_install_languages | length > 0 
    - language_experience_pack_isos_remove_when_finished == true

- name: re-enable antimalware realtime shit
  win_shell: |
    Set-MpPreference -DisableRealtimeMonitoring $false
  ignore_errors: yes
  when: to_install_languages | length > 0
